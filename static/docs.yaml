openapi: 3.0.3
info:
  title: Udacity Golang Capstone CMS API
  description: |-
    This is the capstone project for Udacities Golang NanoDegree program. It will be a simple CRUD CMS API with the endpoints documented here.
    
    Some useful links:
    - [The github repository](https://github.com/djarrin/go-lang-cms-capstone)
  version: 1.0.11
servers:
  - url: XXXXX
tags:
  - name: customer
    description: CRUD operations for customers
paths:
  /customers:
    get:
      tags:
        - customer
      summary: Get all exisisting customers
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      tags:
          - customer
      summary: Create a new customer
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Customer'
        '405':
          description: Invalid input
  /customer/{id}:
    get:
      tags:
        - customer
      summary: Get customer by customer id
      parameters:
        - name: id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
    put:
      tags:
        - customer
      summary: Update customer by customer id
      parameters:
        - name: id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
        '405':
          description: Invalid input
    delete:
      tags:
        - customer
      summary: Get customer by customer id
      parameters:
        - name: id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '404':
          description: Customer not found

components:
  schemas:
    CreateCustomer:
      type: object
      properties:
        name:
          type: string
          example: David
        role:
          type: string
          example: Admin
        email:
          type: string
          example: fakeemail@email.com
        phone:
          type: string
          example: 444-555-7891
        contacted:
          type: boolean
          example: true
      xml:
        name: customer
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        name:
          type: string
          example: David
        role:
          type: string
          example: Admin
        email:
          type: string
          example: fakeemail@email.com
        phone:
          type: string
          example: 444-555-7891
        contacted:
          type: boolean
          example: true
      xml:
        name: customer